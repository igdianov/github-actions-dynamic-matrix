# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'import/**'
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  matrix:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.matrix.outputs.files }}
      count: ${{ steps.matrix.outputs.count }}
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'json'

      - id: matrix
        run: |
          echo "::set-output name=files::${{ steps.files.outputs.added }}"
          ADDED_COUNT=`echo "${{ steps.files.outputs.added }}" | jq count`
          echo "::set-output name=count::$ADDED_COUNT"
        
  # This workflow contains a single job called "build"
  import:
    if: ${{ needs.matrix.outputs.count > 0 }}
    needs: [ matrix ]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        file: ${{ fromJson(needs.matrix.outputs.files) }}
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Import file
        run: echo "${{ matrix.file }}"

